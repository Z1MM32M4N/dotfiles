# Core settings
[core]
	pager = diff-highlight | less -F -X
	excludesfile = ~/.gitignore
[help]
	autocorrect = 18
[pull]
	ff = only
[push]
	default = simple
	autoSetupRemote = true
[log]
	date = relative
[rebase]
	autosquash = true
	updateRefs = true
[diff]
	colorMoved = yes
[init]
	defaultBranch = master

# Color settings
[color]
	ui = true
[color "decorate"]
	head = magenta
	branch = bold magenta
	remotebranch = blue
	tag = bold red
[color "diff"]
	whitespace = red reverse
	newMoved = blue
	func = blue
	meta = reverse
[color "interactive"]
	prompt = blue
	header = yellow
	help = magenta
	error = bold red


# Aliases
[alias]
	cp = cherry-pick
	fp = push --force-with-lease
	bd = branch -D
	# the SHA to compare diffs against
	review-base = !git merge-base \"${review_base:-origin/master}\" \"${1:-HEAD}\"
	base = review-base
	# list files which have changed since review_base
	files = !git diff --name-only $(git review-base)
	# Same as above, but with a diff stat instead of just names
	# (better for interactive use)
	stat = !git diff --stat $(git review-base)
	# split-diff style review using vim-fugitive Gdiff
	review = !$EDITOR -p $(git files) +\"tabdo Gdiff ${review_base:-origin/master}\" +\"let g:gitgutter_diff_base = '${review_base:-origin/master}'\"
	reviewone = !$EDITOR -p +\"tabdo Gdiff ${review_base:-origin/master}\" +\"let g:gitgutter_diff_base = '${review_base:-origin/master}'\"
	reviewf = !$EDITOR -p $(git files | fzf -m --reverse --height 40%) +\"tabdo Gdiff ${review_base:-origin/master}\" +\"let g:gitgutter_diff_base = '${review_base:-origin/master}'\"
	# For when the diff is too big to review with :Gdiff
	diff-review = !git diff $(git review-base)
	# Review by commit
	by-commit = !git log -p --reverse \"${1:-$(git review-base $2)}\"..\"${2:-HEAD}\"
	# split-diff, using icdiff
	icdiff = --paginate difftool --tool icdiff
	# show the before, changes, and after for one tracked image
	diff-img = difftool --tool imgdiff
	# Show just the subject and body of a particular commit (default: HEAD)
	message = log -n1 --format=\"%s%n%n%b\"
	# Show a markdown-formatted summary of commits from {review_base:-origin/master} until HEAD
	pr-summary = !git log --reverse --format=\"- **%s** (%h)%n%n%w(74,2,2)%b\" \"${review_base:-origin/master}\"..HEAD
	# Get last commit authored by me
	my-last = log -n1 --format=\"%H\" --author=\"\\([jJ]ake\\)\\|\\([jJ]acob\\) [zZ]immerman\"
	root = rev-parse --show-toplevel
	head = rev-parse HEAD
	restack = !"git rebase --update-refs --onto \"${review_base:-origin/master}\" \"$(git review-base)\" \"${1:-$(git branch --show-current)}\" #"
	land = !"git rebase --update-refs --onto \"${review_base:-origin/master}\" \"${1:-$(git review-base)}\" \"${2:-$(git branch --show-current)}\" #"
	all-parents = !git log \"$(git base \"${1:-HEAD}\")^..${1:-HEAD}^\" --decorate-refs-exclude='refs/remotes/*' --decorate-refs-exclude='tags/*' --pretty=\"format:%(decorate:prefix=,suffix=,separator=%n,pointer=%n)\" | grep -v '^$'
	parent = !git log \"$(git base \"${1:-HEAD}\")^..${1:-HEAD}^\" --decorate-refs-exclude='refs/remotes/*' --decorate-refs-exclude='tags/*' --pretty=\"format:%(decorate:prefix=,suffix=,separator=%n,pointer=%n)\" | grep -v '^$' | head -n 1
	# old-submit-stack = !git branch --format \"%(if)%(upstream)%(then)%(upstream:remotename)%(else)origin%(end) %(refname:lstrip=2)\" --merged HEAD \"$USER-*\" | tac | xargs -L 1 git push --force-with-lease 2>&1 | sed -e '/^remote:/d'
	# See https://github.com/jez/bin/tree/master/git-submit-stack
	ss = submit-stack


# Diff & Difftool settings
[diff]
	compactionHeuristic = true
[difftool]
	prompt = false
[difftool "icdiff"]
	cmd = icdiff --no-bold --line-numbers -L \"$BASE\" -L \"$REMOTE\" \"$LOCAL\" \"$REMOTE\"
[difftool "imgdiff"]
	cmd = git-imgdiff
[interactive]
	diffFilter = diff-highlight

# Merge conflict settings
[merge]
	tool = vimdiff
	conflictstyle = diff3

# GitHub-specific
[hub]
	protocol = ssh
